//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeviceRecord
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TsEntity : DbContext
    {
        public TsEntity()
            : base("name=TsEntity")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<device_accessories> device_accessories { get; set; }
        public virtual DbSet<devices> devices { get; set; }
    
        public virtual ObjectResult<supportCollection_Result> supportCollection()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<supportCollection_Result>("supportCollection");
        }
    
        public virtual int insertForSupport(string deviceName, Nullable<int> serialNumber, Nullable<System.DateTime> guaranteeEnd, string seller, string type, Nullable<System.DateTime> entryDate, string price, string placement, string responsible)
        {
            var deviceNameParameter = deviceName != null ?
                new ObjectParameter("deviceName", deviceName) :
                new ObjectParameter("deviceName", typeof(string));
    
            var serialNumberParameter = serialNumber.HasValue ?
                new ObjectParameter("serialNumber", serialNumber) :
                new ObjectParameter("serialNumber", typeof(int));
    
            var guaranteeEndParameter = guaranteeEnd.HasValue ?
                new ObjectParameter("guaranteeEnd", guaranteeEnd) :
                new ObjectParameter("guaranteeEnd", typeof(System.DateTime));
    
            var sellerParameter = seller != null ?
                new ObjectParameter("seller", seller) :
                new ObjectParameter("seller", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var entryDateParameter = entryDate.HasValue ?
                new ObjectParameter("entryDate", entryDate) :
                new ObjectParameter("entryDate", typeof(System.DateTime));
    
            var priceParameter = price != null ?
                new ObjectParameter("price", price) :
                new ObjectParameter("price", typeof(string));
    
            var placementParameter = placement != null ?
                new ObjectParameter("placement", placement) :
                new ObjectParameter("placement", typeof(string));
    
            var responsibleParameter = responsible != null ?
                new ObjectParameter("responsible", responsible) :
                new ObjectParameter("responsible", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertForSupport", deviceNameParameter, serialNumberParameter, guaranteeEndParameter, sellerParameter, typeParameter, entryDateParameter, priceParameter, placementParameter, responsibleParameter);
        }
    }
}
